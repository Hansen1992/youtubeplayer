{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","searchTerm","onInputChange","e","setState","target","value","onFormSubmit","preventDefault","props","onTermSubmit","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","high","url","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","term","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"qQAkCmBA,E,2MA9BfC,MAAQ,CAACC,WAAY,I,EAErBC,cAAgB,SAAAC,GACZ,EAAKC,SAAS,CAACH,WAAYE,EAAEE,OAAOC,S,EAGxCC,aAAe,SAAAJ,GACXA,EAAEK,iBACF,EAAKC,MAAMC,aAAa,EAAKV,MAAMC,a,wEAInC,OACI,yBAAKU,UAAU,0BACX,0BAAOC,SAAUC,KAAKN,aAAcI,UAAU,WAC1C,yBAAKA,UAAU,SACX,+CAGA,2BACAG,KAAK,OACLR,MAAOO,KAAKb,MAAMC,WAClBc,SAAUF,KAAKX,uB,GAvBfc,IAAMC,W,QCCfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNC,WAAY,EACZC,IAPI,6CCcOC,G,MAbD,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACI,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQf,UAAU,mBAChD,yBAAKkB,IAAKH,EAAMI,QAAQC,MAAOpB,UAAU,WAAWqB,IAAKN,EAAMI,QAAQG,WAAWC,KAAKC,MACvF,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,UACVe,EAAMI,QAAQC,WCQpBK,EAXG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACnBW,EAAeD,EAAOE,KAAI,SAAAb,GAC5B,OAAO,kBAAC,EAAD,CACPF,IAAKE,EAAMc,GAAGC,QACdd,cAAeA,EACfD,MAAOA,OAGX,OAAO,yBAAKf,UAAU,2BAA2B2B,ICclCI,EA1BC,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACnB,IAAIA,EACA,OAAO,2CAIX,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAE3D,OACI,6BACI,yBAAK9B,UAAU,YACX,4BAAQoB,MAAM,SAASC,IAAKW,KAGhC,yBAAKhC,UAAU,cACX,wBAAIA,UAAU,aACbe,EAAMI,QAAQC,OAEf,2BACCL,EAAMI,QAAQc,gBCkCZC,E,2MAhDf7C,MAAQ,CAAEqC,OAAQ,GAAIS,cAAe,M,EAOrCpC,a,uCAAe,WAAMqC,GAAN,eAAAC,EAAA,sEACYC,EAAQC,IAAI,SAAU,CAEzC7B,OAAQ,CAAE8B,EAAGJ,KAHN,OACLK,EADK,OAQX,EAAKhD,SAAS,CACViC,OAAQe,EAASC,KAAKC,MAC1BR,cAAeM,EAASC,KAAKC,MAAM,KAVxB,2C,wDAaf3B,cAAgB,SAACD,GACb,EAAKtB,SAAS,CAAE0C,cAAepB,K,mFAjB/Bb,KAAKH,aAAa,a,+BAoBlB,OAKI,yBAAKC,UAAU,gBACX,kBAAC,EAAD,CAAWD,aAAcG,KAAKH,eAC9B,yBAAKC,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,sBACf,kBAAC,EAAD,CAAae,MAAOb,KAAKb,MAAM8C,iBAE/B,yBAAKnC,UAAU,oBACf,kBAAC,EAAD,CACAgB,cAAed,KAAKc,cACpBU,OAAQxB,KAAKb,MAAMqC,iB,GAxCzBrB,IAAMC,WCFxBsC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.ee4c581e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// create SearchBar ui and functionality\r\nclass SearchBar extends React.Component {\r\n    state = {searchTerm: ''}\r\n    \r\n    onInputChange = e => {\r\n        this.setState({searchTerm: e.target.value});\r\n    };\r\n    \r\n    onFormSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onTermSubmit(this.state.searchTerm)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\" search-bar ui segment\">\r\n                <form  onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>\r\n                            Video Search    \r\n                        </label>\r\n                        <input \r\n                        type=\"text\" \r\n                        value={this.state.searchTerm}\r\n                        onChange={this.onInputChange}/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default SearchBar;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyBr6PBNUv1F0J_oU2tPTug-OZL4XG_POko';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        maxResults: 5,\r\n        key: KEY\r\n    }\r\n})","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n    return (\r\n        <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n            <img alt={video.snippet.title} className=\"ui image\" src={video.snippet.thumbnails.high.url}/>\r\n            <div className=\"content\">\r\n                <div className=\"header\">\r\n                    {video.snippet.title}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    export default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\n//E6 syntax istedet for at skrive props i const VideoList = ({ videos })\r\n// Så kan man skrive 'videos' og dernæst refere det ned til vores return, så der dernede heller ikke skal stå\r\n// props.videos.length, men blot vidoes.length\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n    const renderedList = videos.map(video => {\r\n        return <VideoItem \r\n        key={video.id.videoId} \r\n        onVideoSelect={onVideoSelect} \r\n        video={video} \r\n        />\r\n    });\r\n    return <div className=\"ui relaxed divided list\">{renderedList}</div>\r\n};\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n    if(!video) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    //fetching the data, he tell you in episode 126 how to do it.\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n    // the iframe makes it possible to get a videoplayer inside our app\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe title=\"player\" src={videoSrc} />\r\n\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">\r\n                {video.snippet.title}\r\n                </h4>\r\n                <p>\r\n                {video.snippet.description}\r\n                </p>\r\n            </div>\r\n        </div>\r\n        );\r\n    };\r\n    \r\n    export default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from '../components/VideoList';\r\nimport VideoDetail from '../components/VideoDetail';\r\n\r\nclass App extends React.Component {\r\n    state = { videos: [], selectedVideo: null};\r\n    \r\n    componentDidMount() {\r\n        // create the standard search term that appears on screen when opening the app\r\n        this.onTermSubmit('Reactjs')\r\n    }\r\n\r\n    onTermSubmit = async term => {\r\n        const response = await youtube.get('search', {\r\n            // it is called 'q' because that is what the youtube api documentation specifically told us to call it. You'll get an error if you write 'query' or something like that.\r\n            params: { q: term\r\n            }\r\n        });\r\n\r\n        // make sure to update both items and the video player when searching on things\r\n        this.setState({\r\n            videos: response.data.items,\r\n        selectedVideo: response.data.items[0]});\r\n    };\r\n    \r\n    onVideoSelect = (video) => {\r\n        this.setState({ selectedVideo: video})\r\n    }\r\n    render() {\r\n        return (\r\n            // ui conatiner is the ui css that makes some margin to both left and right, making the searchbar centered\r\n            // Det er vigtigt at VideoDetail har 'video' og \r\n            // VideoList har 'videos', da computeren ikke kan finde ud af det\r\n            // hvis vi skriver forskellige kommandoer i noget, der kun har ét formål\r\n            <div className=\"ui container\">\r\n                <SearchBar onTermSubmit={this.onTermSubmit} />\r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n                        <div className=\"eleven wide column\">\r\n                        <VideoDetail video={this.state.selectedVideo}/>\r\n                        </div>\r\n                        <div className=\"five wide column\">\r\n                        <VideoList \r\n                        onVideoSelect={this.onVideoSelect} \r\n                        videos={this.state.videos}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n    \r\n    export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}